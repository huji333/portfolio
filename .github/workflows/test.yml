name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RAILS_ENV: test

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true

      - name: Install dependencies
        working-directory: ./backend
        run: bundle install

      - name: Run rubocop
        working-directory: ./backend
        run: bundle exec rubocop

  frontend-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install

      - name: Run ESLint
        working-directory: ./frontend
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      PGHOST: 127.0.0.1
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: portfolio_test
    needs: [rubocop, frontend-lint]
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: portfolio_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true

      - name: Install dependencies
        working-directory: ./backend
        run: bundle install

      - name: Debug psql
        run: |
          export PGPASSWORD=$POSTGRES_PASSWORD
          psql -h 127.0.0.1 -U $POSTGRES_USER -d $POSTGRES_DB -c '\conninfo'

      - name: Setup test database
        working-directory: ./backend
        run: bundle exec rails db:prepare

      - name: Run backend tests
        working-directory: ./backend
        run: bundle exec rspec
